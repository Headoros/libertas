pipeline {
    agent any 
    // agent {
    //     docker { image 'node:22.14.0-alpine3.21' }
    // }
    stages {
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonarqube') {
                    sh 'mvn clean package sonar:sonar'
                    echo 'SonarQube Analysis Completed'
                }
            }
        }
        stage('Compile') {
            steps {
                echo 'Compile the source code' 
            }
        }
        stage('Security Check') {
            steps {
                echo 'Run the security check against the application' 
            }
        }
        stage('Run Unit Tests') {
            steps {
                echo 'Run unit tests from the source code' 
            }
        }
        stage('Run Integration Tests') {
            steps {
                echo 'Run only crucial integration tests from the source code' 
            }
        }
        stage('Publish Artifacts') {
            steps {
                echo 'Save the assemblies generated from the compilation' 
            }
        }
        stage('Deploy to Test Environment') {
            steps {
                echo 'Deploying to the test environment using Docker Compose'
                kubernetesDeploy(configs: "event-database-service.yaml, event-service-service.yaml, gateway-service.yaml, notification-database-service.yaml, notification-service-service.yaml, rabbitmq-service.yaml, user-database-service.yaml, user-service-service.yaml, event-database-deployment.yaml, event-service-deployment.yaml, event-service-cm0-configmap.yaml, gateway-deployment.yaml, gateway-cm0-configmap.yaml, notification-database-deployment.yaml, notification-service-deployment.yaml, notification-service-cm0-configmap.yaml, rabbitmq-deployment.yaml, user-database-deployment.yaml, user-service-deployment.yaml, user-service-cm0-configmap.yaml")
            }
        }
    }
}