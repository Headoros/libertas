stages:
  - build_and_push
  - sonarqube
  - deploy

variables:
  IMAGE_NAME: "mikeyspikey/test"
  IMAGE_TAG: "$CI_COMMIT_SHA"
  K8S_NAMESPACE: "default"
  DOCKER_TLS_CERTDIR: ""

services:
  - docker:dind

before_script:
  - apk add --no-cache docker-compose

build_and_push:
  image: docker:latest
  services:
    - name: docker:dind
      alias: docker
  stage: build_and_push
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin
  script:
    - docker info
    - docker-compose build

deploy:
  stage: deploy
  image:
    name: alpine/k8s:1.28.0
    entrypoint: ["/bin/sh", "-c"]
  before_script:
    - apk add --no-cache yq
    - mkdir -p $HOME/.kube
    - echo "$KUBECONFIG_BASE64" | base64 -d > $HOME/.kube/config
    - export KUBECONFIG="$HOME/.kube/config"
  script:
    - echo "Deploying to Kubernetes cluster in namespace $K8S_NAMESPACE..."
    - kubectl config set-context --current --namespace="$K8S_NAMESPACE" # Ensure correct namespace
    - kubectl apply -f .

# test:
#   stage: test
#   services:
#     - docker:dind
#       alias: docker
#   script:
#     - docker-compose up -d # Start your services
#     - docker-compose exec <service_name> pytest # Replace <service_name> with your service name
#     - docker-compose down

sonarqube:
  stage: sonarqube
  image: sonarsource/sonar-scanner-cli:latest
  variables:
    SONAR_HOST_URL: "http://localhost:9000" # Replace with your SonarQube server URL
    SONAR_LOGIN: $SONAR_TOKEN # Set this variable in GitLab CI/CD settings
  script:
    - sonar-scanner