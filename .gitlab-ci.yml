stages:
  - build_and_push
  - deploy
  - sonarqube

variables:
  IMAGE_NAME: "mikeyspikey/test"
  IMAGE_TAG: "$CI_COMMIT_SHA"
  K8S_NAMESPACE: "default"
  CI_PROJECT_NAME: "Libertas"
  SONAR_TOKEN: "squ_d3b4e6bc3c19fa4c80581093e40405060d6fd551"

before_script:
  - apk add --no-cache docker-compose

build_and_push:
  stage: build_and_push
  services:
    - docker:dind
  image: docker:latest
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin
  script:
    - docker info
    - docker-compose build

deploy:
  stage: deploy
  image: bitnami/kubectl:latest
  before_script:
    - mkdir -p $HOME/.kube
    - echo "$KUBECONFIG_BASE64" | base64 -d > $HOME/.kube/config
    - export KUBECONFIG="$HOME/.kube/config"
  script:
    - echo "Deploying to Kubernetes cluster in namespace $K8S_NAMESPACE..."
    - kubectl config get-contexts
    - CONTEXT=$(kubectl config current-context)
    - echo "Using current context $CONTEXT"
    - kubectl config set-context --current --namespace="$K8S_NAMESPACE"
    - |
      for file in $(find ./k8s -name "*.yaml" -o -name "*.yml" 2>/dev/null || echo ""); do
        if [ -f "$file" ]; then
          echo "Updating image tags in $file"
          sed -i "s|image: $DOCKER_REGISTRY/.*|image: $DOCKER_REGISTRY/\\1:$IMAGE_TAG|g" "$file"
        fi
      done
    - kubectl apply -f ./k8s/
    - |
      for deployment in $(kubectl get deployments -n $K8S_NAMESPACE -o jsonpath='{.items[*].metadata.name}'); do
        echo "Waiting for deployment $deployment to complete..."
        kubectl rollout status deployment/$deployment -n $K8S_NAMESPACE --timeout=180s
      done
  only:
    - master

sonarqube:
  stage: sonarqube
  image: sonarqube:lts-alpine
  script:
    - sonar-scanner -Dsonar.projectKey=$CI_PROJECT_NAME -Dsonar.sources=. -Dsonar.host.url=http://sonarqube-custom:9000 -Dsonar.login=$SONAR_TOKEN